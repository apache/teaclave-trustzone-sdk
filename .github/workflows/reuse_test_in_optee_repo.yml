# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

on:
  workflow_call:
    inputs:
      runs-on:
        required: true
        type: string
      container:
        required: true
        type: string

defaults:
  run:
    shell: bash

jobs:
  # Cross-compile for ARM64 on host and run tests in QEMU, use the check script
  # in OP-TEE repo.
  OPTEE-repo-build-and-run-examples-64bit-TAs:
    runs-on: ${{ inputs.runs-on }}
    steps:
      - name: Cleanup unused packages to free disk space
        run: |
          echo "Removing top large packages"
          packages=(
            google-chrome-stable microsoft-edge-stable firefox
            azure-cli google-cloud-cli kubectl podman skopeo buildah snapd
            temurin-8-jdk temurin-11-jdk temurin-17-jdk temurin-21-jdk
            dotnet-sdk-8.0 dotnet-runtime-8.0 aspnetcore-runtime-8.0 aspnetcore-targeting-pack-8.0 netstandard-targeting-pack-2.1-8.0 dotnet-targeting-pack-8.0
            llvm-16-dev llvm-17-dev llvm-18-dev
            clang-tools-16 clang-tools-17 clang-tools-18
            clang-tidy-16 clang-tidy-17 clang-tidy-18
          )
          for pkg in "${packages[@]}"; do
              if dpkg-query -W -f='${Package}\n' $pkg 2>/dev/null | grep -q .; then
                  echo "Package $pkg exists, removing..."
                  sudo apt-get remove -y --purge --allow-change-held-packages --allow-remove-essential --no-install-recommends $pkg || true
              else
                  echo "Package $pkg not found, skipping."
              fi
          done
          sudo apt-get autoremove -y || true
          sudo apt-get clean || true
          echo "Disk usage after cleanup:"
          df -h
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          path: 'teaclave-trustzone-sdk'
      - name: Install OP-TEE dependencies
        run: |
          cd $GITHUB_WORKSPACE/teaclave-trustzone-sdk
          chmod +x setup_optee_dependencies.sh
          sudo ./setup_optee_dependencies.sh
      - name: Checkout OP-TEE repository
        run: |
          mkdir -p ~/optee-qemuv8 && cd ~/optee-qemuv8 &&
          repo init -u https://github.com/OP-TEE/manifest.git -m qemu_v8.xml &&
          repo sync -j4 --no-clone-bundle
      - name: Build images and run tests
        run: |
          cd ~/optee-qemuv8
          rm -rf optee_rust/ &&
          mv $GITHUB_WORKSPACE/teaclave-trustzone-sdk optee_rust/
          cd build &&
          make -j3 toolchains &&
          make -j`nproc` RUST_ENABLE=y check

  # Cross-compile for ARM32 on host and run tests in QEMU, use the check script
  # in OP-TEE repo.
  OPTEE-repo-build-and-run-examples-32bit-TAs:
    runs-on: ${{ inputs.runs-on }}
    steps:
      - name: Cleanup unused packages to free disk space
        run: |
          echo "Removing top large packages"
          packages=(
            google-chrome-stable microsoft-edge-stable firefox
            azure-cli google-cloud-cli kubectl podman skopeo buildah snapd
            temurin-8-jdk temurin-11-jdk temurin-17-jdk temurin-21-jdk
            dotnet-sdk-8.0 dotnet-runtime-8.0 aspnetcore-runtime-8.0 aspnetcore-targeting-pack-8.0 netstandard-targeting-pack-2.1-8.0 dotnet-targeting-pack-8.0
            llvm-16-dev llvm-17-dev llvm-18-dev
            clang-tools-16 clang-tools-17 clang-tools-18
            clang-tidy-16 clang-tidy-17 clang-tidy-18
          )
          for pkg in "${packages[@]}"; do
              if dpkg-query -W -f='${Package}\n' $pkg 2>/dev/null | grep -q .; then
                  echo "Package $pkg exists, removing..."
                  sudo apt-get remove -y --purge --allow-change-held-packages --allow-remove-essential --no-install-recommends $pkg || true
              else
                  echo "Package $pkg not found, skipping."
              fi
          done
          sudo apt-get autoremove -y || true
          sudo apt-get clean || true
          echo "Disk usage after cleanup:"
          df -h
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          path: 'teaclave-trustzone-sdk'
      - name: Install OP-TEE dependencies
        run: |
          cd $GITHUB_WORKSPACE/teaclave-trustzone-sdk
          chmod +x setup_optee_dependencies.sh
          sudo ./setup_optee_dependencies.sh
      - name: Checkout OP-TEE repository
        run: |
          mkdir -p ~/optee-qemuv8 && cd ~/optee-qemuv8 &&
          repo init -u https://github.com/OP-TEE/manifest.git -m qemu_v8.xml &&
          repo sync -j4 --no-clone-bundle
      - name: Build images and run tests
        run: |
          cd ~/optee-qemuv8
          rm -rf optee_rust/ &&
          mv $GITHUB_WORKSPACE/teaclave-trustzone-sdk optee_rust/
          cd build &&
          make -j3 toolchains &&
          make -j`nproc` RUST_ENABLE=y COMPILE_S_USER=32 check
